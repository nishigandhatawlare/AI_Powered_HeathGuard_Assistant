// <auto-generated />
using System;
using Health_Guard_Assistant.services.AppointmentService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Health_Guard_Assistant.services.AppointmentService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241015103537_AddUserIdForeignKeyToAppointment")]
    partial class AddUserIdForeignKeyToAppointment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            AppointmentDate = new DateTime(2024, 8, 30, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientName = "Alice Johnson",
                            ProviderId = 1,
                            Status = "Confirmed",
                            UserId = "user123"
                        },
                        new
                        {
                            AppointmentId = 2,
                            AppointmentDate = new DateTime(2024, 8, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientName = "Bob Brown",
                            ProviderId = 2,
                            Status = "Pending",
                            UserId = "user456"
                        },
                        new
                        {
                            AppointmentId = 3,
                            AppointmentDate = new DateTime(2024, 9, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientName = "Charlie Davis",
                            ProviderId = 3,
                            Status = "Confirmed",
                            UserId = "user789"
                        });
                });

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.HealthcareProvider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int");

                    b.HasKey("ProviderId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("HealthcareProviders");

                    b.HasData(
                        new
                        {
                            ProviderId = 1,
                            Availability = "Available Today",
                            LocationId = 1,
                            Name = "Dr. Jane Doe",
                            SpecialtyId = 1
                        },
                        new
                        {
                            ProviderId = 2,
                            Availability = "Available This Week",
                            LocationId = 2,
                            Name = "Dr. John Smith",
                            SpecialtyId = 2
                        },
                        new
                        {
                            ProviderId = 3,
                            Availability = "Available This Month",
                            LocationId = 3,
                            Name = "Dr. Emily White",
                            SpecialtyId = 3
                        });
                });

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Name = "New York"
                        },
                        new
                        {
                            LocationId = 2,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            LocationId = 3,
                            Name = "Chicago"
                        });
                });

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.Specialty", b =>
                {
                    b.Property<int>("SpecialtyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialtyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialtyId");

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            SpecialtyId = 1,
                            Name = "Cardiology"
                        },
                        new
                        {
                            SpecialtyId = 2,
                            Name = "Dermatology"
                        },
                        new
                        {
                            SpecialtyId = 3,
                            Name = "Neurology"
                        });
                });

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.Appointment", b =>
                {
                    b.HasOne("Health_Guard_Assistant.services.AppointmentService.Models.HealthcareProvider", "Provider")
                        .WithMany("Appointments")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.HealthcareProvider", b =>
                {
                    b.HasOne("Health_Guard_Assistant.services.AppointmentService.Models.Location", "Location")
                        .WithMany("HealthcareProviders")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Health_Guard_Assistant.services.AppointmentService.Models.Specialty", "Specialty")
                        .WithMany("HealthcareProviders")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.HealthcareProvider", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.Location", b =>
                {
                    b.Navigation("HealthcareProviders");
                });

            modelBuilder.Entity("Health_Guard_Assistant.services.AppointmentService.Models.Specialty", b =>
                {
                    b.Navigation("HealthcareProviders");
                });
#pragma warning restore 612, 618
        }
    }
}
