// <auto-generated />
using Health_Guard_Assistant.services.MedicationService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Health_Guard_Assistant.services.MedicationService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241018115018_AddedUserIdToMedicationTbl")]
    partial class AddedUserIdToMedicationTbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Health_Guard_Assistant.services.MedicationService.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InteractionWarning")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Timing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dosage = "500mg",
                            InteractionWarning = false,
                            Name = "Aspirin",
                            Timing = "Twice a day",
                            UserId = "rachana@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Dosage = "400mg",
                            InteractionWarning = true,
                            Name = "Ibuprofen",
                            Timing = "Three times a day",
                            UserId = "rachana@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            Dosage = "850mg",
                            InteractionWarning = false,
                            Name = "Metformin",
                            Timing = "Once a day",
                            UserId = "rachana@gmail.com"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
